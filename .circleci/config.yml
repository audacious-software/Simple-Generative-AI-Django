version: 2.1

orbs:
  python: circleci/python@2.1.1
  node: circleci/node@5.0.3

workflows:
  build:
    jobs:
      - build-312
      - build-310
      - build-38
      - build-37
      - build-36

jobs:
  build-312:
    docker:
      - image: cimg/python:3.12
      - image: cimg/postgres:14.18-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - node/install
      - checkout
      - restore_cache:
          key: venv-312-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Validate Javascript code
          command: |
            npm install
            npx eslint static/builder-js/
      - run:
          name: Build and validate
          command: |
            sudo rm /etc/apt/sources.list.d/archive_uri-https_download_docker_com_linux_ubuntu-jammy.list
            echo "deb [arch=amd64] http://us-west-2.ec2.archive.ubuntu.com/ubuntu jammy stable" | sudo tee -a /etc/apt/sources.list.d/amazon.list
            sudo apt-get update && sudo apt-get install -y gdal-bin
            python3 -m venv /home/circleci/venv --copies
            . /home/circleci/venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt --progress-bar off
            cd ..
            mv project simple_generative_ai
            mkdir django
            cd django
            django-admin startproject sga
            mv ../simple_generative_ai sga
            cd sga
            git clone https://github.com/audacious-software/Django-Dialog-Engine.git django_dialog_engine
            git clone https://github.com/audacious-software/Quicksilver-Django.git quicksilver
            pip install -r django_dialog_engine/requirements.txt --progress-bar off
            pip install -r quicksilver/requirements.txt --progress-bar off
            cp simple_generative_ai/circle_settings.py sga/settings.py
            cp simple_generative_ai/circle_urls.py sga/urls.py
            python manage.py migrate
            python manage.py install_quicksilver_tasks
            python manage.py test
            cp simple_generative_ai/.pylintrc .
            pylint simple_generative_ai
            bandit -r .
      - save_cache:
          key: venv-312-{{ .Branch }}-{{ checksum "/home/circleci/django/sga/simple_generative_ai/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app

  build-310:
    docker:
      - image: cimg/python:3.10
      - image: cimg/postgres:14.18-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - node/install
      - checkout
      - restore_cache:
          key: venv-310-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Validate Javascript code
          command: |
            npm install
            npx eslint static/builder-js/
      - run:
          name: Build and validate
          command: |
            sudo rm /etc/apt/sources.list.d/archive_uri-https_download_docker_com_linux_ubuntu-jammy.list
            echo "deb [arch=amd64] http://us-west-2.ec2.archive.ubuntu.com/ubuntu jammy stable" | sudo tee -a /etc/apt/sources.list.d/amazon.list
            sudo apt-get update && sudo apt-get install -y gdal-bin
            python3 -m venv /home/circleci/venv --copies
            . /home/circleci/venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt --progress-bar off
            cd ..
            mv project simple_generative_ai
            mkdir django
            cd django
            django-admin startproject sga
            mv ../simple_generative_ai sga
            cd sga
            git clone https://github.com/audacious-software/Django-Dialog-Engine.git django_dialog_engine
            git clone https://github.com/audacious-software/Quicksilver-Django.git quicksilver
            pip install -r django_dialog_engine/requirements.txt --progress-bar off
            pip install -r quicksilver/requirements.txt --progress-bar off
            cp simple_generative_ai/circle_settings.py sga/settings.py
            cp simple_generative_ai/circle_urls.py sga/urls.py
            python manage.py migrate
            python manage.py install_quicksilver_tasks
            python manage.py test
            cp simple_generative_ai/.pylintrc .
            pylint simple_generative_ai
            bandit -r .
      - save_cache:
          key: venv-310-{{ .Branch }}-{{ checksum "/home/circleci/django/sga/simple_generative_ai/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app

  build-38:
    docker:
      - image: cimg/python:3.8
      - image: cimg/postgres:12.18-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - node/install
      - checkout
      - restore_cache:
          key: venv-38-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Validate Javascript code
          command: |
            npm install
            npx eslint static/builder-js/
      - run:
          name: Build and validate
          command: |
            sudo rm /etc/apt/sources.list.d/archive_uri-https_download_docker_com_linux_ubuntu-jammy.list
            echo "deb [arch=amd64] http://us-west-2.ec2.archive.ubuntu.com/ubuntu jammy stable" | sudo tee -a /etc/apt/sources.list.d/amazon.list
            sudo apt-get update && sudo apt-get install -y gdal-bin
            python3 -m venv /home/circleci/venv --copies
            . /home/circleci/venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt --progress-bar off
            cd ..
            mv project simple_generative_ai
            mkdir django
            cd django
            django-admin startproject sga
            mv ../simple_generative_ai sga
            cd sga
            git clone https://github.com/audacious-software/Django-Dialog-Engine.git django_dialog_engine
            git clone https://github.com/audacious-software/Quicksilver-Django.git quicksilver
            pip install -r django_dialog_engine/requirements.txt --progress-bar off
            pip install -r quicksilver/requirements.txt --progress-bar off
            cp simple_generative_ai/circle_settings.py sga/settings.py
            cp simple_generative_ai/circle_urls.py sga/urls.py
            python manage.py migrate
            python manage.py install_quicksilver_tasks
            python manage.py test
            cp simple_generative_ai/.pylintrc .
            pylint simple_generative_ai
            bandit -r .
      - save_cache:
          key: venv-38-{{ .Branch }}-{{ checksum "/home/circleci/django/sga/simple_generative_ai/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app

  build-37:
    docker:
      - image: cimg/python:3.7
      - image: cimg/postgres:9.6.24-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - node/install
      - checkout
      - restore_cache:
          key: venv-37-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Validate Javascript code
          command: |
            npm install
            npx eslint static/builder-js/
      - run:
          name: Build and validate
          command: |
            sudo rm /etc/apt/sources.list.d/archive_uri-https_download_docker_com_linux_ubuntu-jammy.list
            echo "deb [arch=amd64] http://us-west-2.ec2.archive.ubuntu.com/ubuntu jammy stable" | sudo tee -a /etc/apt/sources.list.d/amazon.list
            sudo apt-get update && sudo apt-get install -y gdal-bin
            python3 -m venv /home/circleci/venv --copies
            . /home/circleci/venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt --progress-bar off
            cd ..
            mv project simple_generative_ai
            mkdir django
            cd django
            django-admin.py startproject sga
            mv ../simple_generative_ai sga
            cd sga
            git clone https://github.com/audacious-software/Django-Dialog-Engine.git django_dialog_engine
            git clone https://github.com/audacious-software/Quicksilver-Django.git quicksilver
            pip install -r django_dialog_engine/requirements.txt --progress-bar off
            pip install -r quicksilver/requirements.txt --progress-bar off
            cp simple_generative_ai/circle_settings.py sga/settings.py
            cp simple_generative_ai/circle_urls.py sga/urls.py
            python manage.py migrate
            python manage.py install_quicksilver_tasks
            python manage.py test
            cp simple_generative_ai/.pylintrc .
            pylint simple_generative_ai
            bandit -r .
      - save_cache:
          key: venv-37-{{ .Branch }}-{{ checksum "/home/circleci/django/sga/simple_generative_ai/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app

  build-36:
    docker:
      - image: cimg/python:3.6
      - image: cimg/postgres:9.6.24-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - node/install
      - checkout
      - restore_cache:
          key: venv-36-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Validate Javascript code
          command: |
            npm install
            npx eslint static/builder-js/
      - run:
          name: Build and validate
          command: |
            sudo sed -i -e 's/http:\/\/archive\.ubuntu\.com\/ubuntu\//http:\/\/us-west-2\.ec2\.archive\.ubuntu\.com\/ubuntu\//' /etc/apt/sources.list
            sudo apt-get update && sudo apt-get install -y gdal-bin
            python3 -m venv /home/circleci/venv --copies
            . /home/circleci/venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt --progress-bar off
            cd ..
            mv project simple_generative_ai
            mkdir django
            cd django
            django-admin.py startproject sga
            mv ../simple_generative_ai sga
            cd sga
            git clone https://github.com/audacious-software/Django-Dialog-Engine.git django_dialog_engine
            git clone https://github.com/audacious-software/Quicksilver-Django.git quicksilver
            pip install -r django_dialog_engine/requirements.txt --progress-bar off
            pip install -r quicksilver/requirements.txt --progress-bar off
            cp simple_generative_ai/circle_settings.py sga/settings.py
            cp simple_generative_ai/circle_urls.py sga/urls.py
            python manage.py migrate
            python manage.py install_quicksilver_tasks
            python manage.py test
            cp simple_generative_ai/.pylintrc .
            pylint simple_generative_ai
            bandit -r .
      - save_cache:
          key: venv-36-{{ .Branch }}-{{ checksum "/home/circleci/django/sga/simple_generative_ai/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app
